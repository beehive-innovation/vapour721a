/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20BalanceTier,
  ERC20BalanceTierInterface,
} from "../ERC20BalanceTier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "Initialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    name: "InitializeValueTier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "TierChange",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "erc20",
            type: "address",
          },
          {
            internalType: "uint256[8]",
            name: "tierValues",
            type: "uint256[8]",
          },
        ],
        internalType: "struct ERC20BalanceTierConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "report",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "setTier",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tierValues",
    outputs: [
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a2c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806370230b39146100515780638a200fff1461006f578063a61e331514610084578063e053ea3114610097575b600080fd5b6100596100b8565b6040516100669190610679565b60405180910390f35b61008261007d3660046106c3565b6100ed565b005b61008261009236600461078c565b610125565b6100aa6100a536600461082a565b610200565b604051908152602001610066565b6100c061065a565b6000546100d5906001600160a01b0316610290565b8060200190518101906100e89190610847565b905090565b60405162461bcd60e51b815260206004820152600860248201526729a2aa2faa24a2a960c11b60448201526064015b60405180910390fd5b600061013160016102a0565b9050801561014d576000805460ff60a81b1916600160a81b1790555b61015a826020015161033b565b8151600180546001600160a01b0319166001600160a01b0390921691821790556040805133815260208101929092527fdc90fed0326ba91706deeac7eb34ac9f8b680734f9d782864dc29704d23bed6a910160405180910390a180156101fc576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600061028a60006102856102126100b8565b6001546040516370a0823160e01b81526001600160a01b038881166004830152909116906370a0823190602401602060405180830381865afa15801561025c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028091906108a8565b610476565b6104c4565b92915050565b606061028a826001600019610517565b60008054600160a81b900460ff16156102e9578160ff1660011480156102c55750303b155b6102e15760405162461bcd60e51b815260040161011c906108c1565b506000919050565b60005460ff808416600160a01b90920416106103175760405162461bcd60e51b815260040161011c906108c1565b506000805460ff909216600160a01b0260ff60a01b19909216919091179055600190565b6000546001600160a01b0316156103545761035461090f565b6000805b60088110156103e3578183826008811061037457610374610925565b602002015110156103c25760405162461bcd60e51b81526020600482015260186024820152774f55545f4f465f4f524445525f544945525f56414c55455360401b604482015260640161011c565b8281600881106103d4576103d4610925565b60200201519150600101610358565b5050600061040f826040516020016103fb9190610679565b6040516020818303038152906040526105c9565b604080513381526001600160a01b03831660208201529192507f18ebb958e85030233374c8eb79c1a72ee418770db7fb47a7de05d30c868ec958910160405180910390a1600080546001600160a01b0319166001600160a01b039290921691909117905550565b6000805b60088110156104ba5783816008811061049557610495610925565b60200201518310156104a857905061028a565b806104b28161093b565b91505061047a565b5060089392505050565b60008160088111156105035760405162461bcd60e51b815260206004820152600860248201526726a0ac2faa24a2a960c11b604482015260640161011c565b505060001960209190910290811c901b1790565b6060833b806105365750506040805160208101909152600081526105c2565b808411156105545750506040805160208101909152600081526105c2565b838310156105865760405163162544fd60e11b815260048101829052602481018590526044810184905260640161011c565b838303848203600082821061059b578261059d565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050505b9392505050565b6000806105f4836040516020016105e0919061099f565b60405160208183030381529060405261062e565b90508051602082016000f091506001600160a01b0382166106285760405163046a55db60e11b815260040160405180910390fd5b50919050565b60608151826040516020016106449291906109b2565b6040516020818303038152906040529050919050565b6040518061010001604052806008906020820280368337509192915050565b6101008101818360005b60088110156106a2578151835260209283019290910190600101610683565b50505092915050565b6001600160a01b03811681146106c057600080fd5b50565b600080600080606085870312156106d957600080fd5b84356106e4816106ab565b935060208501359250604085013567ffffffffffffffff8082111561070857600080fd5b818701915087601f83011261071c57600080fd5b81358181111561072b57600080fd5b88602082850101111561073d57600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156107865761078661074c565b60405290565b60006101208083850312156107a057600080fd5b6040516040810181811067ffffffffffffffff821117156107c3576107c361074c565b60405283356107d1816106ab565b81526020603f850186136107e457600080fd5b6107ec610762565b9285019280878511156107fe57600080fd5b8287015b858110156108195780358352918301918301610802565b509183019190915250949350505050565b60006020828403121561083c57600080fd5b81356105c2816106ab565b600061010080838503121561085b57600080fd5b83601f84011261086a57600080fd5b610872610762565b90830190808583111561088457600080fd5b845b8381101561089e578051835260209283019201610886565b5095945050505050565b6000602082840312156108ba57600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561095d57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815160005b81811015610985576020818501810151868301520161096b565b81811115610994576000828601525b509290920192915050565b6000815260006105c26001830184610964565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b600582015260006109ee600e830184610964565b94935050505056fea26469706673582212204a02c7bf84da5260729f4ab93611c282f9f0636fe997483d816c6c2358ec357d64736f6c634300080a0033";

type ERC20BalanceTierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20BalanceTierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20BalanceTier__factory extends ContractFactory {
  constructor(...args: ERC20BalanceTierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20BalanceTier> {
    return super.deploy(overrides || {}) as Promise<ERC20BalanceTier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20BalanceTier {
    return super.attach(address) as ERC20BalanceTier;
  }
  connect(signer: Signer): ERC20BalanceTier__factory {
    return super.connect(signer) as ERC20BalanceTier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20BalanceTierInterface {
    return new utils.Interface(_abi) as ERC20BalanceTierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20BalanceTier {
    return new Contract(address, _abi, signerOrProvider) as ERC20BalanceTier;
  }
}
