/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReserveTokenERC1155,
  ReserveTokenERC1155Interface,
} from "../ReserveTokenERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000033565b506200012f565b8051620000489060029060208401906200004c565b5050565b8280546200005a90620000f2565b90600052602060002090601f0160209004810192826200007e5760008555620000c9565b82601f106200009957805160ff1916838001178555620000c9565b82800160010185558215620000c9579182015b82811115620000c9578251825591602001919060010190620000ac565b50620000d7929150620000db565b5090565b5b80821115620000d75760008155600101620000dc565b600181811c908216806200010757607f821691505b602082108114156200012957634e487b7160e01b600052602260045260246000fd5b50919050565b6119a6806200013f6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80634e1273f4116100715780634e1273f41461013e5780636b20c4541461015e578063a22cb46514610171578063e985e9c514610184578063f242432a146101c0578063f5298aca146101d357600080fd5b8062fdd58e146100ad57806301ffc9a7146100d35780630e89341c146100f65780632eb2c2d61461011657806334a7c2e71461012b575b600080fd5b6100c06100bb366004610faf565b6101e6565b6040519081526020015b60405180910390f35b6100e66100e1366004610ff2565b61027d565b60405190151581526020016100ca565b610109610104366004611016565b6102cf565b6040516100ca919061107c565b6101296101243660046111d8565b610363565b005b610129610139366004611281565b6103fa565b61015161014c3660046112a3565b610419565b6040516100ca91906113a8565b61012961016c3660046113bb565b610542565b61012961017f36600461142e565b61058a565b6100e661019236600461146a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101296101ce36600461149d565b610595565b6101296101e1366004611501565b6105da565b60006001600160a01b0383166102575760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102ae57506001600160e01b031982166303a24d0760e21b145b806102c957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102de90611534565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90611534565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b50505050509050919050565b6001600160a01b03851633148061037f575061037f8533610192565b6103e65760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161024e565b6103f3858585858561061d565b5050505050565b610415338383604051806020016040528060008152506107b9565b5050565b6060815183511461047e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161024e565b600083516001600160401b038111156104995761049961108f565b6040519080825280602002602001820160405280156104c2578160200160208202803683370190505b50905060005b845181101561053a5761050d8582815181106104e6576104e661156f565b60200260200101518583815181106105005761050061156f565b60200260200101516101e6565b82828151811061051f5761051f61156f565b60209081029190910101526105338161159b565b90506104c8565b509392505050565b6001600160a01b03831633148061055e575061055e8333610192565b61057a5760405162461bcd60e51b815260040161024e906115b6565b6105858383836108bb565b505050565b610415338383610a46565b6001600160a01b0385163314806105b157506105b18533610192565b6105cd5760405162461bcd60e51b815260040161024e906115b6565b6103f38585858585610b27565b6001600160a01b0383163314806105f657506105f68333610192565b6106125760405162461bcd60e51b815260040161024e906115b6565b610585838383610c3f565b815183511461063e5760405162461bcd60e51b815260040161024e906115ff565b6001600160a01b0384166106645760405162461bcd60e51b815260040161024e90611647565b3360005b845181101561074b5760008582815181106106855761068561156f565b6020026020010151905060008583815181106106a3576106a361156f565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106f35760405162461bcd60e51b815260040161024e9061168c565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906107309084906116d6565b92505081905550505050806107449061159b565b9050610668565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161079b9291906116ee565b60405180910390a46107b1818787878787610d31565b505050505050565b6001600160a01b0384166108195760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161024e565b33600061082585610e8d565b9050600061083285610e8d565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906108649084906116d6565b909155505060408051878152602081018790526001600160a01b03808a169260009291871691600080516020611951833981519152910160405180910390a46108b283600089898989610ed8565b50505050505050565b6001600160a01b0383166108e15760405162461bcd60e51b815260040161024e9061171c565b80518251146109025760405162461bcd60e51b815260040161024e906115ff565b604080516020810190915260009081905233905b83518110156109d85760008482815181106109335761093361156f565b6020026020010151905060008483815181106109515761095161156f565b602090810291909101810151600084815280835260408082206001600160a01b038c1683529093529190912054909150818110156109a15760405162461bcd60e51b815260040161024e9061175f565b6000928352602083815260408085206001600160a01b038b16865290915290922091039055806109d08161159b565b915050610916565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610a299291906116ee565b60405180910390a460408051602081019091526000905250505050565b816001600160a01b0316836001600160a01b03161415610aba5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161024e565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610b4d5760405162461bcd60e51b815260040161024e90611647565b336000610b5985610e8d565b90506000610b6685610e8d565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610ba95760405162461bcd60e51b815260040161024e9061168c565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610be69084906116d6565b909155505060408051888152602081018890526001600160a01b03808b16928c82169291881691600080516020611951833981519152910160405180910390a4610c34848a8a8a8a8a610ed8565b505050505050505050565b6001600160a01b038316610c655760405162461bcd60e51b815260040161024e9061171c565b336000610c7184610e8d565b90506000610c7e84610e8d565b60408051602080820183526000918290528882528181528282206001600160a01b038b1683529052205490915084811015610ccb5760405162461bcd60e51b815260040161024e9061175f565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a9052909290881691600080516020611951833981519152910160405180910390a46040805160208101909152600090526108b2565b6001600160a01b0384163b156107b15760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610d7590899089908890889088906004016117a3565b6020604051808303816000875af1925050508015610db0575060408051601f3d908101601f19168201909252610dad91810190611801565b60015b610e5d57610dbc61181e565b806308c379a01415610df65750610dd161183a565b80610ddc5750610df8565b8060405162461bcd60e51b815260040161024e919061107c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161024e565b6001600160e01b0319811663bc197c8160e01b146108b25760405162461bcd60e51b815260040161024e906118c3565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ec757610ec761156f565b602090810291909101015292915050565b6001600160a01b0384163b156107b15760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610f1c908990899088908890889060040161190b565b6020604051808303816000875af1925050508015610f57575060408051601f3d908101601f19168201909252610f5491810190611801565b60015b610f6357610dbc61181e565b6001600160e01b0319811663f23a6e6160e01b146108b25760405162461bcd60e51b815260040161024e906118c3565b80356001600160a01b0381168114610faa57600080fd5b919050565b60008060408385031215610fc257600080fd5b610fcb83610f93565b946020939093013593505050565b6001600160e01b031981168114610fef57600080fd5b50565b60006020828403121561100457600080fd5b813561100f81610fd9565b9392505050565b60006020828403121561102857600080fd5b5035919050565b6000815180845260005b8181101561105557602081850181015186830182015201611039565b81811115611067576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061100f602083018461102f565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156110ca576110ca61108f565b6040525050565b60006001600160401b038211156110ea576110ea61108f565b5060051b60200190565b600082601f83011261110557600080fd5b81356020611112826110d1565b60405161111f82826110a5565b83815260059390931b850182019282810191508684111561113f57600080fd5b8286015b8481101561115a5780358352918301918301611143565b509695505050505050565b600082601f83011261117657600080fd5b81356001600160401b0381111561118f5761118f61108f565b6040516111a6601f8301601f1916602001826110a5565b8181528460208386010111156111bb57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156111f057600080fd5b6111f986610f93565b945061120760208701610f93565b935060408601356001600160401b038082111561122357600080fd5b61122f89838a016110f4565b9450606088013591508082111561124557600080fd5b61125189838a016110f4565b9350608088013591508082111561126757600080fd5b5061127488828901611165565b9150509295509295909350565b6000806040838503121561129457600080fd5b50508035926020909101359150565b600080604083850312156112b657600080fd5b82356001600160401b03808211156112cd57600080fd5b818501915085601f8301126112e157600080fd5b813560206112ee826110d1565b6040516112fb82826110a5565b83815260059390931b850182019282810191508984111561131b57600080fd5b948201945b838610156113405761133186610f93565b82529482019490820190611320565b9650508601359250508082111561135657600080fd5b50611363858286016110f4565b9150509250929050565b600081518084526020808501945080840160005b8381101561139d57815187529582019590820190600101611381565b509495945050505050565b60208152600061100f602083018461136d565b6000806000606084860312156113d057600080fd5b6113d984610f93565b925060208401356001600160401b03808211156113f557600080fd5b611401878388016110f4565b9350604086013591508082111561141757600080fd5b50611424868287016110f4565b9150509250925092565b6000806040838503121561144157600080fd5b61144a83610f93565b91506020830135801515811461145f57600080fd5b809150509250929050565b6000806040838503121561147d57600080fd5b61148683610f93565b915061149460208401610f93565b90509250929050565b600080600080600060a086880312156114b557600080fd5b6114be86610f93565b94506114cc60208701610f93565b9350604086013592506060860135915060808601356001600160401b038111156114f557600080fd5b61127488828901611165565b60008060006060848603121561151657600080fd5b61151f84610f93565b95602085013595506040909401359392505050565b600181811c9082168061154857607f821691505b6020821081141561156957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156115af576115af611585565b5060010190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156116e9576116e9611585565b500190565b604081526000611701604083018561136d565b8281036020840152611713818561136d565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906117cf9083018661136d565b82810360608401526117e1818661136d565b905082810360808401526117f5818561102f565b98975050505050505050565b60006020828403121561181357600080fd5b815161100f81610fd9565b600060033d11156118375760046000803e5060005160e01c5b90565b600060443d10156118485790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561187757505050505090565b828501915081518181111561188f5750505050505090565b843d87010160208285010111156118a95750505050505090565b6118b8602082860101876110a5565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906119459083018461102f565b97965050505050505056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a2646970667358221220a73020d6687c6bf3c04f10218a5bf08a986ad716f5d7c8de54a8008a76c5dfe564736f6c634300080a0033";

type ReserveTokenERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveTokenERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReserveTokenERC1155__factory extends ContractFactory {
  constructor(...args: ReserveTokenERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReserveTokenERC1155> {
    return super.deploy(overrides || {}) as Promise<ReserveTokenERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ReserveTokenERC1155 {
    return super.attach(address) as ReserveTokenERC1155;
  }
  connect(signer: Signer): ReserveTokenERC1155__factory {
    return super.connect(signer) as ReserveTokenERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveTokenERC1155Interface {
    return new utils.Interface(_abi) as ReserveTokenERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReserveTokenERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ReserveTokenERC1155;
  }
}
