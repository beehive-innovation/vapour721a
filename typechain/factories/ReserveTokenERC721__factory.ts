/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReserveTokenERC721,
  ReserveTokenERC721Interface,
} from "../ReserveTokenERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintNewToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018c2380380620018c2833981016040819052620000349162000341565b8151829082906200004d906000906020850190620001ce565b50805162000063906001906020840190620001ce565b5050600060068190556200007a9150339062000082565b50506200040f565b6001600160a01b038216620000de5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064015b60405180910390fd5b6000818152600260205260409020546001600160a01b031615620001455760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401620000d5565b6001600160a01b038216600090815260036020526040812080546001929062000170908490620003ab565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054620001dc90620003d2565b90600052602060002090601f0160209004810192826200020057600085556200024b565b82601f106200021b57805160ff19168380011785556200024b565b828001600101855582156200024b579182015b828111156200024b5782518255916020019190600101906200022e565b50620002599291506200025d565b5090565b5b808211156200025957600081556001016200025e565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029c57600080fd5b81516001600160401b0380821115620002b957620002b962000274565b604051601f8301601f19908116603f01168101908282118183101715620002e457620002e462000274565b816040528381526020925086838588010111156200030157600080fd5b600091505b8382101562000325578582018301518183018401529082019062000306565b83821115620003375760008385830101525b9695505050505050565b600080604083850312156200035557600080fd5b82516001600160401b03808211156200036d57600080fd5b6200037b868387016200028a565b935060208501519150808211156200039257600080fd5b50620003a1858286016200028a565b9150509250929050565b60008219821115620003cd57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003e757607f821691505b602082108114156200040957634e487b7160e01b600052602260045260246000fd5b50919050565b6114a3806200041f6000396000f3fe608060405234801561001057600080fd5b50600436106100e05760003560e01c806370a082311161008757806370a08231146101ae57806374f10479146101cf57806395d89b41146101d75780639f181b5e146101df578063a22cb465146101e8578063b88d4fde146101fb578063c87b56dd1461020e578063e985e9c51461022157600080fd5b806301ffc9a7146100e557806306fdde031461010d578063081812fc14610122578063095ea7b31461014d57806323b872dd1461016257806342842e0e1461017557806342966c68146101885780636352211e1461019b575b600080fd5b6100f86100f3366004610f93565b610234565b60405190151581526020015b60405180910390f35b610115610286565b6040516101049190611008565b61013561013036600461101b565b610318565b6040516001600160a01b039091168152602001610104565b61016061015b366004611050565b6103a5565b005b61016061017036600461107a565b6104b6565b61016061018336600461107a565b6104e8565b61016061019636600461101b565b610503565b6101356101a936600461101b565b61057d565b6101c16101bc3660046110b6565b6105f4565b604051908152602001610104565b61016061067b565b61011561069e565b6101c160065481565b6101606101f63660046110d1565b6106ad565b610160610209366004611123565b6106bc565b61011561021c36600461101b565b6106f4565b6100f861022f3660046111ff565b6107cc565b60006001600160e01b031982166380ac58cd60e01b148061026557506001600160e01b03198216635b5e139f60e01b145b8061028057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461029590611232565b80601f01602080910402602001604051908101604052809291908181526020018280546102c190611232565b801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b6000610323826107fa565b6103895760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b08261057d565b9050806001600160a01b0316836001600160a01b0316141561041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610380565b336001600160a01b038216148061043a575061043a81336107cc565b6104a75760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608401610380565b6104b18383610817565b505050565b6104c1335b82610885565b6104dd5760405162461bcd60e51b81526004016103809061126d565b6104b183838361094f565b6104b1838383604051806020016040528060008152506106bc565b61050c336104bb565b6105715760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610380565b61057a81610ad9565b50565b6000818152600260205260408120546001600160a01b0316806102805760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610380565b60006001600160a01b03821661065f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610380565b506001600160a01b031660009081526003602052604090205490565b6006805490600061068b836112d4565b919050555061069c33600654610b62565b565b60606001805461029590611232565b6106b8338383610c83565b5050565b6106c63383610885565b6106e25760405162461bcd60e51b81526004016103809061126d565b6106ee84848484610d4e565b50505050565b60606106ff826107fa565b6107635760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610380565b600061077a60408051602081019091526000815290565b9050600081511161079a57604051806020016040528060008152506107c5565b806107a484610d81565b6040516020016107b59291906112ef565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061084c8261057d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610890826107fa565b6108f15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610380565b60006108fc8361057d565b9050806001600160a01b0316846001600160a01b03161480610923575061092381856107cc565b806109475750836001600160a01b031661093c84610318565b6001600160a01b0316145b949350505050565b826001600160a01b03166109628261057d565b6001600160a01b0316146109c65760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610380565b6001600160a01b038216610a285760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610380565b610a33600082610817565b6001600160a01b0383166000908152600360205260408120805460019290610a5c90849061131e565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a8a908490611335565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061144e83398151915291a4505050565b6000610ae48261057d565b9050610af1600083610817565b6001600160a01b0381166000908152600360205260408120805460019290610b1a90849061131e565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b0384169060008051602061144e833981519152908390a45050565b6001600160a01b038216610bb85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610380565b610bc1816107fa565b15610c0e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610380565b6001600160a01b0382166000908152600360205260408120805460019290610c37908490611335565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b038616908117909155905183929060008051602061144e833981519152908290a45050565b816001600160a01b0316836001600160a01b03161415610ce15760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610380565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d5984848461094f565b610d6584848484610e7f565b6106ee5760405162461bcd60e51b81526004016103809061134d565b606081610da55750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610dcf5780610db9816112d4565b9150610dc89050600a836113b5565b9150610da9565b60008167ffffffffffffffff811115610dea57610dea61110d565b6040519080825280601f01601f191660200182016040528015610e14576020820181803683370190505b5090505b841561094757610e2960018361131e565b9150610e36600a866113c9565b610e41906030611335565b60f81b818381518110610e5657610e566113dd565b60200101906001600160f81b031916908160001a905350610e78600a866113b5565b9450610e18565b60006001600160a01b0384163b15610f7257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ec39033908990889088906004016113f3565b6020604051808303816000875af1925050508015610efe575060408051601f3d908101601f19168201909252610efb91810190611430565b60015b610f58573d808015610f2c576040519150601f19603f3d011682016040523d82523d6000602084013e610f31565b606091505b508051610f505760405162461bcd60e51b81526004016103809061134d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610947565b506001949350505050565b6001600160e01b03198116811461057a57600080fd5b600060208284031215610fa557600080fd5b81356107c581610f7d565b60005b83811015610fcb578181015183820152602001610fb3565b838111156106ee5750506000910152565b60008151808452610ff4816020860160208601610fb0565b601f01601f19169290920160200192915050565b6020815260006107c56020830184610fdc565b60006020828403121561102d57600080fd5b5035919050565b80356001600160a01b038116811461104b57600080fd5b919050565b6000806040838503121561106357600080fd5b61106c83611034565b946020939093013593505050565b60008060006060848603121561108f57600080fd5b61109884611034565b92506110a660208501611034565b9150604084013590509250925092565b6000602082840312156110c857600080fd5b6107c582611034565b600080604083850312156110e457600080fd5b6110ed83611034565b91506020830135801515811461110257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561113957600080fd5b61114285611034565b935061115060208601611034565b925060408501359150606085013567ffffffffffffffff8082111561117457600080fd5b818701915087601f83011261118857600080fd5b81358181111561119a5761119a61110d565b604051601f8201601f19908116603f011681019083821181831017156111c2576111c261110d565b816040528281528a60208487010111156111db57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561121257600080fd5b61121b83611034565b915061122960208401611034565b90509250929050565b600181811c9082168061124657607f821691505b6020821081141561126757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006000198214156112e8576112e86112be565b5060010190565b60008351611301818460208801610fb0565b835190830190611315818360208801610fb0565b01949350505050565b600082821015611330576113306112be565b500390565b60008219821115611348576113486112be565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826113c4576113c461139f565b500490565b6000826113d8576113d861139f565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061142690830184610fdc565b9695505050505050565b60006020828403121561144257600080fd5b81516107c581610f7d56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220510f139e17b539dec1aa93a593a724a6c8efb72787067cb2bc25daf5a20daf3c64736f6c634300080a0033";

type ReserveTokenERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveTokenERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReserveTokenERC721__factory extends ContractFactory {
  constructor(...args: ReserveTokenERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReserveTokenERC721> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ReserveTokenERC721>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): ReserveTokenERC721 {
    return super.attach(address) as ReserveTokenERC721;
  }
  connect(signer: Signer): ReserveTokenERC721__factory {
    return super.connect(signer) as ReserveTokenERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveTokenERC721Interface {
    return new utils.Interface(_abi) as ReserveTokenERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReserveTokenERC721 {
    return new Contract(address, _abi, signerOrProvider) as ReserveTokenERC721;
  }
}
