/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ReserveToken, ReserveTokenInterface } from "../ReserveToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "addFreezable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "freezables",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600b81526a55534420436c617373696360a81b602080830191825283518085019094526005845264555344434360d81b908401528151919291620000629160039162000081565b5080516200007890600490602084019062000081565b50505062000164565b8280546200008f9062000127565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b600181811c908216806200013c57607f821691505b602082108114156200015e57634e487b7160e01b600052602260045260246000fd5b50919050565b610da280620001746000396000f3fe608060405234801561001057600080fd5b50600436106100f65760003560e01c80635bb9058b116100925780635bb9058b146101c357806370a08231146101f557806379cc67901461021e578063902d55a51461023157806395d89b411461023957806397304ced14610241578063a457c2d714610254578063a9059cbb14610267578063dd62ed3e1461027a57600080fd5b806306fdde03146100fb578063095ea7b31461011957806318160ddd1461013c57806323b872dd1461014e5780632e0f262514610161578063313ce56714610169578063395093511461017857806342966c681461018b57806348422faa146101a0575b600080fd5b61010361028d565b6040516101109190610a78565b60405180910390f35b61012c610127366004610ae9565b61031f565b6040519015158152602001610110565b6002545b604051908152602001610110565b61012c61015c366004610b13565b610339565b610140600681565b60405160068152602001610110565b61012c610186366004610ae9565b61035d565b61019e610199366004610b4f565b61037f565b005b61012c6101ae366004610b68565b60056020526000908152604090205460ff1681565b61019e6101d1366004610b68565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b610140610203366004610b68565b6001600160a01b031660009081526020819052604090205490565b61019e61022c366004610ae9565b61038c565b6101406103a5565b6101036103bf565b61019e61024f366004610b4f565b6103ce565b61012c610262366004610ae9565b6103e9565b61012c610275366004610ae9565b610469565b610140610288366004610b8a565b610477565b60606003805461029c90610bbd565b80601f01602080910402602001604051908101604052809291908181526020018280546102c890610bbd565b80156103155780601f106102ea57610100808354040283529160200191610315565b820191906000526020600020905b8154815290600101906020018083116102f857829003601f168201915b5050505050905090565b60003361032d8185856104a2565b60019150505b92915050565b6000336103478582856105c7565b610352858585610641565b506001949350505050565b60003361032d8185856103708383610477565b61037a9190610c0e565b6104a2565b6103893382610808565b50565b6103978233836105c7565b6103a18282610808565b5050565b6103b160066009610c0e565b6103bc90600a610d0a565b81565b60606004805461029c90610bbd565b610389336103e483670de0b6b3a7640000610d16565b61094d565b600033816103f78286610477565b90508381101561045c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61035282868684036104a2565b60003361032d818585610641565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105045760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610453565b6001600160a01b0382166105655760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610453565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105d38484610477565b9050600019811461063b578181101561062e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610453565b61063b84848484036104a2565b50505050565b6001600160a01b0383166106a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610453565b6001600160a01b0382166107075760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610453565b610712838383610a26565b6001600160a01b0383166000908152602081905260409020548181101561078a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610453565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107c1908490610c0e565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610d4d833981519152846040516107fb91815260200190565b60405180910390a361063b565b6001600160a01b0382166108685760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610453565b61087482600083610a26565b6001600160a01b038216600090815260208190526040902054818110156108e85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610453565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610917908490610d35565b90915550506040518281526000906001600160a01b03851690600080516020610d4d833981519152906020016105ba565b505050565b6001600160a01b0382166109a35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610453565b6109af60008383610a26565b80600260008282546109c19190610c0e565b90915550506001600160a01b038216600090815260208190526040812080548392906109ee908490610c0e565b90915550506040518181526001600160a01b03831690600090600080516020610d4d8339815191529060200160405180910390a35050565b6001600160a01b03821660009081526005602052604090205460ff16156109485760405162461bcd60e51b8152602060048201526006602482015265232927ad22a760d11b6044820152606401610453565b600060208083528351808285015260005b81811015610aa557858101830151858201604001528201610a89565b81811115610ab7576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ae457600080fd5b919050565b60008060408385031215610afc57600080fd5b610b0583610acd565b946020939093013593505050565b600080600060608486031215610b2857600080fd5b610b3184610acd565b9250610b3f60208501610acd565b9150604084013590509250925092565b600060208284031215610b6157600080fd5b5035919050565b600060208284031215610b7a57600080fd5b610b8382610acd565b9392505050565b60008060408385031215610b9d57600080fd5b610ba683610acd565b9150610bb460208401610acd565b90509250929050565b600181811c90821680610bd157607f821691505b60208210811415610bf257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c2157610c21610bf8565b500190565b600181815b80851115610c61578160001904821115610c4757610c47610bf8565b80851615610c5457918102915b93841c9390800290610c2b565b509250929050565b600082610c7857506001610333565b81610c8557506000610333565b8160018114610c9b5760028114610ca557610cc1565b6001915050610333565b60ff841115610cb657610cb6610bf8565b50506001821b610333565b5060208310610133831016604e8410600b8410161715610ce4575081810a610333565b610cee8383610c26565b8060001904821115610d0257610d02610bf8565b029392505050565b6000610b838383610c69565b6000816000190483118215151615610d3057610d30610bf8565b500290565b600082821015610d4757610d47610bf8565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204b037ce55712a13671adf75d31d8595dc2eed478d0b0ba1d6780ab3668304c8264736f6c634300080a0033";

type ReserveTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReserveToken__factory extends ContractFactory {
  constructor(...args: ReserveTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReserveToken> {
    return super.deploy(overrides || {}) as Promise<ReserveToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ReserveToken {
    return super.attach(address) as ReserveToken;
  }
  connect(signer: Signer): ReserveToken__factory {
    return super.connect(signer) as ReserveToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveTokenInterface {
    return new utils.Interface(_abi) as ReserveTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReserveToken {
    return new Contract(address, _abi, signerOrProvider) as ReserveToken;
  }
}
